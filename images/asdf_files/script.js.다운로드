/**@type {HTMLCanvasElement} */
const canvas = document.getElementById("game");
const ctx = canvas.getContext("2d");
var totw = 1200;
var toth = 700;
var imgw = 120;
var imgh = 187;
var elemLeft = canvas.offsetLeft;
var elemTop = canvas.offsetTop;
var papers = [];
var bef = [-1, -1];
class Queue {
  constructor() {
    this._arr = [];
  }
  push(item) {
    this._arr.push(item);
  }
  pop() {
    return this._arr.shift();
  }
}
const queue = new Queue();
for (var i = 0; i < 3; i++) {
  papers[i] = [];
  for (var j = 0; j < 6; j++) {
    papers[i][j] = {
      x: 40 + j * 200,
      y: i * 210 + 47,
      status: 0,
      type: Math.floor((i * 6 + j) / 2) + 1,
    };
  }
}
for (var i = 0; i < 100; i++) {
  const fi = Math.floor(Math.random() * 3);
  const fj = Math.floor(Math.random() * 6);
  const si = Math.floor(Math.random() * 3);
  const sj = Math.floor(Math.random() * 6);
  var temp = papers[fi][fj].type;
  papers[fi][fj].type = papers[si][sj].type;
  papers[si][sj].type = temp;
}
function showimg(i, j) {
  var img = new Image();
  img.src = "../../images/gostop" + papers[i][j].type + ".png";
  img.onload = function () {
    ctx.drawImage(img, papers[i][j].x, papers[i][j].y, imgw, imgh);
  };
}
function hideimg(i, j) {
  ctx.beginPath();
  ctx.rect(papers[i][j].x, papers[i][j].y, imgw, imgh);
  ctx.fillStyle = "#555555";
  ctx.fill();
  ctx.closePath();
}
function paper_draw() {
  c = 0;
  for (var i = 0; i < 3; i++) {
    for (var j = 0; j < 6; j++) {
      if (papers[i][j].status == 1) showimg(i, j);
      else if (papers[i][j].status == 0) hideimg(i, j);
    }
  }
}
function sleep(ms) {
  const wakeUpTime = Date.now() + ms;
  while (Date.now() < wakeUpTime) {}
}
function draw() {
  const nqueue = new Queue();
  while (queue._arr.length > 0) {
    var t = queue._arr.pop();
    console.log(t);
    if (t.time <= Date.now()) {
      papers[t.x][t.y] = t.status;
    } else {
      nqueue.push(queue);
    }
  }
  while (nqueue._arr.length > 0) {
    queue.push(nqueue.pop());
  }
  ctx.beginPath();
  ctx.rect(0, 0, totw, toth);
  ctx.fillStyle = "#aaaaaa";
  ctx.fill();
  ctx.closePath();
  paper_draw();
}
canvas.addEventListener("click", function (event) {
  if (queue._arr.length > 0) return;
  var x = event.pageX - elemLeft;
  var y = event.pageY - elemTop;
  for (var i = 0; i < 3; i++) {
    for (var j = 0; j < 6; j++) {
      if (
        x >= papers[i][j].x &&
        y >= papers[i][j].y &&
        x <= papers[i][j].x + imgw &&
        y <= papers[i][j].y + imgh
      ) {
        if (bef[0] == -1) {
          bef[0] = i;
          bef[1] = j;
          papers[i][j].status = 1;
        } else {
          if (bef[0] == i && bef[1] == j) continue;
          if (papers[bef[0]][bef[1]].type == papers[i][j].type) {
            papers[i][j].status = 1;
            draw();
            queue.push({
              time: Date.now() + 1000,
              x: bef[0],
              y: bef[1],
              status: 2,
            });
            queue.push({ time: Date.now() + 1000, x: i, y: j, status: 2 });
          } else {
            papers[i][j].status = 1;
            draw();
            queue.push({
              time: Date.now() + 1000,
              x: bef[0],
              y: bef[1],
              status: 0,
            });
            queue.push({ time: Date.now() + 1000, x: i, y: j, status: 0 });
          }
          bef[0] = -1;
          bef[1] = -1;
        }
      }
    }
  }
  draw();
});
setInterval(() => {
  draw();
}, 100);
